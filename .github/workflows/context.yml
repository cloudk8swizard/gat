name: Context

on: [push, pull_request]

jobs:
  functions:
    runs-on: ubuntu-latest
    #Maximum amount of time all of the jobs can take before terminating this workflow. Can be set for the whole workflow of for specific steps
    timeout-minutes: 360
    steps:
      - name: DUMP
        run: |
          echo ${{ contains( 'hello', 'll' ) }}
          echo ${{ startsWith( 'hello', 'he' ) }}
          echo ${{ endsWith( 'hello', 'lo' ) }}
          echo ${{ format( 'Hello {0} {1} {2}', 'World', '!', '!' ) }}

  one:
    runs-on: ubuntu-16.04
    if: github.event_name == 'push'
    steps:
    # More info about Context: https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
      - name: DUMP Github CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        # this step will fail due to the on purpose "eccho"
        run: eccho "$GITHUB_CONTEXT"
        # The action sequence will continue even if this job fails.
        continue-on-error: true
      - name: DUMP job CONTEXT
        # When using "if" there is no need or curly brakes. Github knows it will run an expression.
        # If there is a failure, the function "failure()" return true and therefore this step will run even if there is a failure
        if: failure()
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: DUMP steps CONTEXT        
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: DUMP runner CONTEXT
        # the "always()" function will make this step run always no matter if previous steps fail or not
        if: always()
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: DUMP strategy CONTEXT
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: DUMP matrix CONTEXT
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"